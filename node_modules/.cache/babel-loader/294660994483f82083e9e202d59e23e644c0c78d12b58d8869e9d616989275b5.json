{"ast":null,"code":"var _s = $RefreshSig$();\n// Inspired by https://ui.shadcn.com/docs/components/toast\nimport * as React from \"react\";\nconst TOAST_LIMIT = 1;\nlet count = 0;\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE;\n  return count.toString();\n}\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT)\n      };\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map(t => t.id === action.toast.id ? {\n          ...t,\n          ...action.toast\n        } : t)\n      };\n    case \"DISMISS_TOAST\":\n      {\n        const {\n          toastId\n        } = action;\n        return {\n          ...state,\n          toasts: state.toasts.filter(t => t.id !== toastId)\n        };\n      }\n    case \"REMOVE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.filter(t => t.id !== action.toastId)\n      };\n    default:\n      return state;\n  }\n};\nconst listeners = [];\nlet memoryState = {\n  toasts: []\n};\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach(listener => {\n    listener(memoryState);\n  });\n}\nfunction toast(props) {\n  const id = genId();\n  const update = props => dispatch({\n    type: \"UPDATE_TOAST\",\n    toast: {\n      ...props,\n      id\n    }\n  });\n  const dismiss = () => dispatch({\n    type: \"DISMISS_TOAST\",\n    toastId: id\n  });\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: open => {\n        if (!open) dismiss();\n      }\n    }\n  });\n  return {\n    id: id,\n    dismiss,\n    update\n  };\n}\nfunction useToast() {\n  _s();\n  const [state, setState] = React.useState(memoryState);\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n  return {\n    ...state,\n    toast,\n    dismiss: toastId => dispatch({\n      type: \"DISMISS_TOAST\",\n      toastId\n    })\n  };\n}\n_s(useToast, \"SPWE98mLGnlsnNfIwu/IAKTSZtk=\");\nexport { useToast, toast };","map":{"version":3,"names":["React","TOAST_LIMIT","count","genId","Number","MAX_VALUE","toString","reducer","state","action","type","toasts","toast","slice","map","t","id","toastId","filter","listeners","memoryState","dispatch","forEach","listener","props","update","dismiss","open","onOpenChange","useToast","_s","setState","useState","useEffect","push","index","indexOf","splice"],"sources":["/home/poodle/Work/TimeBoxing/src/hooks/use-toast.js"],"sourcesContent":["// Inspired by https://ui.shadcn.com/docs/components/toast\nimport * as React from \"react\"\n\nconst TOAST_LIMIT = 1\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE\n  return count.toString()\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== toastId),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n    default:\n      return state\n  }\n}\n\nconst listeners = []\n\nlet memoryState = { toasts: [] }\n\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\nfunction toast(props) {\n  const id = genId()\n\n  const update = (props) =>\n    dispatch({ type: \"UPDATE_TOAST\", toast: { ...props, id } })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast } "],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,MAAMC,WAAW,GAAG,CAAC;AAErB,IAAIC,KAAK,GAAG,CAAC;AAEb,SAASC,KAAKA,CAAA,EAAG;EACfD,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,IAAIE,MAAM,CAACC,SAAS;EACtC,OAAOH,KAAK,CAACI,QAAQ,CAAC,CAAC;AACzB;AAEA,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QACL,GAAGF,KAAK;QACRG,MAAM,EAAE,CAACF,MAAM,CAACG,KAAK,EAAE,GAAGJ,KAAK,CAACG,MAAM,CAAC,CAACE,KAAK,CAAC,CAAC,EAAEZ,WAAW;MAC9D,CAAC;IAEH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGO,KAAK;QACRG,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACG,GAAG,CAAEC,CAAC,IACzBA,CAAC,CAACC,EAAE,KAAKP,MAAM,CAACG,KAAK,CAACI,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAE,GAAGN,MAAM,CAACG;QAAM,CAAC,GAAGG,CACzD;MACF,CAAC;IAEH,KAAK,eAAe;MAAE;QACpB,MAAM;UAAEE;QAAQ,CAAC,GAAGR,MAAM;QAC1B,OAAO;UACL,GAAGD,KAAK;UACRG,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACO,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,OAAO;QACrD,CAAC;MACH;IACA,KAAK,cAAc;MACjB,OAAO;QACL,GAAGT,KAAK;QACRG,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACO,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,MAAM,CAACQ,OAAO;MAC5D,CAAC;IACH;MACE,OAAOT,KAAK;EAChB;AACF,CAAC;AAED,MAAMW,SAAS,GAAG,EAAE;AAEpB,IAAIC,WAAW,GAAG;EAAET,MAAM,EAAE;AAAG,CAAC;AAEhC,SAASU,QAAQA,CAACZ,MAAM,EAAE;EACxBW,WAAW,GAAGb,OAAO,CAACa,WAAW,EAAEX,MAAM,CAAC;EAC1CU,SAAS,CAACG,OAAO,CAAEC,QAAQ,IAAK;IAC9BA,QAAQ,CAACH,WAAW,CAAC;EACvB,CAAC,CAAC;AACJ;AAEA,SAASR,KAAKA,CAACY,KAAK,EAAE;EACpB,MAAMR,EAAE,GAAGb,KAAK,CAAC,CAAC;EAElB,MAAMsB,MAAM,GAAID,KAAK,IACnBH,QAAQ,CAAC;IAAEX,IAAI,EAAE,cAAc;IAAEE,KAAK,EAAE;MAAE,GAAGY,KAAK;MAAER;IAAG;EAAE,CAAC,CAAC;EAC7D,MAAMU,OAAO,GAAGA,CAAA,KAAML,QAAQ,CAAC;IAAEX,IAAI,EAAE,eAAe;IAAEO,OAAO,EAAED;EAAG,CAAC,CAAC;EAEtEK,QAAQ,CAAC;IACPX,IAAI,EAAE,WAAW;IACjBE,KAAK,EAAE;MACL,GAAGY,KAAK;MACRR,EAAE;MACFW,IAAI,EAAE,IAAI;MACVC,YAAY,EAAGD,IAAI,IAAK;QACtB,IAAI,CAACA,IAAI,EAAED,OAAO,CAAC,CAAC;MACtB;IACF;EACF,CAAC,CAAC;EAEF,OAAO;IACLV,EAAE,EAAEA,EAAE;IACNU,OAAO;IACPD;EACF,CAAC;AACH;AAEA,SAASI,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACtB,KAAK,EAAEuB,QAAQ,CAAC,GAAG/B,KAAK,CAACgC,QAAQ,CAACZ,WAAW,CAAC;EAErDpB,KAAK,CAACiC,SAAS,CAAC,MAAM;IACpBd,SAAS,CAACe,IAAI,CAACH,QAAQ,CAAC;IACxB,OAAO,MAAM;MACX,MAAMI,KAAK,GAAGhB,SAAS,CAACiB,OAAO,CAACL,QAAQ,CAAC;MACzC,IAAII,KAAK,GAAG,CAAC,CAAC,EAAE;QACdhB,SAAS,CAACkB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAAC3B,KAAK,CAAC,CAAC;EAEX,OAAO;IACL,GAAGA,KAAK;IACRI,KAAK;IACLc,OAAO,EAAGT,OAAO,IAAKI,QAAQ,CAAC;MAAEX,IAAI,EAAE,eAAe;MAAEO;IAAQ,CAAC;EACnE,CAAC;AACH;AAACa,EAAA,CAlBQD,QAAQ;AAoBjB,SAASA,QAAQ,EAAEjB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}