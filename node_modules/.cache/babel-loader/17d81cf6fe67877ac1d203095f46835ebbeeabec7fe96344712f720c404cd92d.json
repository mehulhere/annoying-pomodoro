{"ast":null,"code":"var _s = $RefreshSig$();\n// Inspired by react-hot-toast library\nimport React from 'react';\nconst TOAST_LIMIT = 3;\nconst TOAST_REMOVE_DELAY = 5000;\nlet memoryState = {\n  toasts: []\n};\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach(listener => {\n    listener(memoryState);\n  });\n}\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT)\n      };\n    case 'DISMISS_TOAST':\n      if (action.toastId) {\n        return {\n          ...state,\n          toasts: state.toasts.map(t => t.id === action.toastId ? {\n            ...t,\n            visible: false\n          } : t)\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.map(t => ({\n          ...t,\n          visible: false\n        }))\n      };\n    case 'REMOVE_TOAST':\n      if (action.toastId) {\n        return {\n          ...state,\n          toasts: state.toasts.filter(t => t.id !== action.toastId)\n        };\n      }\n      return {\n        ...state,\n        toasts: []\n      };\n    default:\n      return state;\n  }\n}\nlet listeners = [];\nfunction toast(props) {\n  const id = Date.now().toString(); // Simple unique ID\n  const dismiss = () => dispatch({\n    type: 'DISMISS_TOAST',\n    toastId: id\n  });\n  dispatch({\n    type: 'ADD_TOAST',\n    toast: {\n      ...props,\n      id,\n      visible: true,\n      onDismiss: dismiss\n    }\n  });\n  setTimeout(() => {\n    dismiss();\n  }, props.duration || TOAST_REMOVE_DELAY);\n  setTimeout(() => {\n    dispatch({\n      type: 'REMOVE_TOAST',\n      toastId: id\n    });\n  }, (props.duration || TOAST_REMOVE_DELAY) + 500); // Delay removal for animation\n\n  return {\n    id: id,\n    dismiss,\n    update: props => console.warn(\"Toast update not implemented in this basic version\") // Placeholder\n  };\n}\nfunction useToast() {\n  _s();\n  const [state, setState] = React.useState(memoryState);\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n  return {\n    ...state,\n    toast,\n    dismiss: toastId => dispatch({\n      type: 'DISMISS_TOAST',\n      toastId\n    })\n  };\n}\n_s(useToast, \"SPWE98mLGnlsnNfIwu/IAKTSZtk=\");\nexport { useToast, toast };","map":{"version":3,"names":["React","TOAST_LIMIT","TOAST_REMOVE_DELAY","memoryState","toasts","dispatch","action","reducer","listeners","forEach","listener","state","type","toast","slice","toastId","map","t","id","visible","filter","props","Date","now","toString","dismiss","onDismiss","setTimeout","duration","update","console","warn","useToast","_s","setState","useState","useEffect","push","index","indexOf","splice"],"sources":["/home/poodle/Work/TimeBoxing/src/hooks/use-toast.js"],"sourcesContent":["// Inspired by react-hot-toast library\nimport React from 'react';\n\nconst TOAST_LIMIT = 3;\nconst TOAST_REMOVE_DELAY = 5000;\n\nlet memoryState = { toasts: [] };\n\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n    case 'DISMISS_TOAST':\n      if (action.toastId) {\n        return {\n          ...state,\n          toasts: state.toasts.map((t) =>\n            t.id === action.toastId ? { ...t, visible: false } : t\n          ),\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.map((t) => ({ ...t, visible: false })),\n      };\n    case 'REMOVE_TOAST':\n      if (action.toastId) {\n        return {\n          ...state,\n          toasts: state.toasts.filter((t) => t.id !== action.toastId),\n        };\n      }\n      return { ...state, toasts: [] };\n    default:\n      return state;\n  }\n}\n\nlet listeners = [];\n\nfunction toast(props) {\n  const id = Date.now().toString(); // Simple unique ID\n  const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id });\n\n  dispatch({\n    type: 'ADD_TOAST',\n    toast: {\n      ...props,\n      id,\n      visible: true,\n      onDismiss: dismiss,\n    },\n  });\n\n  setTimeout(() => {\n    dismiss();\n  }, props.duration || TOAST_REMOVE_DELAY);\n  \n  setTimeout(() => {\n    dispatch({ type: 'REMOVE_TOAST', toastId: id });\n  }, (props.duration || TOAST_REMOVE_DELAY) + 500); // Delay removal for animation\n\n  return {\n    id: id,\n    dismiss,\n    update: (props) => console.warn(\"Toast update not implemented in this basic version\"), // Placeholder\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId) => dispatch({ type: 'DISMISS_TOAST', toastId }),\n  };\n}\n\nexport { useToast, toast }; "],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAG,CAAC;AACrB,MAAMC,kBAAkB,GAAG,IAAI;AAE/B,IAAIC,WAAW,GAAG;EAAEC,MAAM,EAAE;AAAG,CAAC;AAEhC,SAASC,QAAQA,CAACC,MAAM,EAAE;EACxBH,WAAW,GAAGI,OAAO,CAACJ,WAAW,EAAEG,MAAM,CAAC;EAC1CE,SAAS,CAACC,OAAO,CAAEC,QAAQ,IAAK;IAC9BA,QAAQ,CAACP,WAAW,CAAC;EACvB,CAAC,CAAC;AACJ;AAEA,SAASI,OAAOA,CAACI,KAAK,EAAEL,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACM,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QACL,GAAGD,KAAK;QACRP,MAAM,EAAE,CAACE,MAAM,CAACO,KAAK,EAAE,GAAGF,KAAK,CAACP,MAAM,CAAC,CAACU,KAAK,CAAC,CAAC,EAAEb,WAAW;MAC9D,CAAC;IACH,KAAK,eAAe;MAClB,IAAIK,MAAM,CAACS,OAAO,EAAE;QAClB,OAAO;UACL,GAAGJ,KAAK;UACRP,MAAM,EAAEO,KAAK,CAACP,MAAM,CAACY,GAAG,CAAEC,CAAC,IACzBA,CAAC,CAACC,EAAE,KAAKZ,MAAM,CAACS,OAAO,GAAG;YAAE,GAAGE,CAAC;YAAEE,OAAO,EAAE;UAAM,CAAC,GAAGF,CACvD;QACF,CAAC;MACH;MACA,OAAO;QACL,GAAGN,KAAK;QACRP,MAAM,EAAEO,KAAK,CAACP,MAAM,CAACY,GAAG,CAAEC,CAAC,KAAM;UAAE,GAAGA,CAAC;UAAEE,OAAO,EAAE;QAAM,CAAC,CAAC;MAC5D,CAAC;IACH,KAAK,cAAc;MACjB,IAAIb,MAAM,CAACS,OAAO,EAAE;QAClB,OAAO;UACL,GAAGJ,KAAK;UACRP,MAAM,EAAEO,KAAK,CAACP,MAAM,CAACgB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKZ,MAAM,CAACS,OAAO;QAC5D,CAAC;MACH;MACA,OAAO;QAAE,GAAGJ,KAAK;QAAEP,MAAM,EAAE;MAAG,CAAC;IACjC;MACE,OAAOO,KAAK;EAChB;AACF;AAEA,IAAIH,SAAS,GAAG,EAAE;AAElB,SAASK,KAAKA,CAACQ,KAAK,EAAE;EACpB,MAAMH,EAAE,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClC,MAAMC,OAAO,GAAGA,CAAA,KAAMpB,QAAQ,CAAC;IAAEO,IAAI,EAAE,eAAe;IAAEG,OAAO,EAAEG;EAAG,CAAC,CAAC;EAEtEb,QAAQ,CAAC;IACPO,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE;MACL,GAAGQ,KAAK;MACRH,EAAE;MACFC,OAAO,EAAE,IAAI;MACbO,SAAS,EAAED;IACb;EACF,CAAC,CAAC;EAEFE,UAAU,CAAC,MAAM;IACfF,OAAO,CAAC,CAAC;EACX,CAAC,EAAEJ,KAAK,CAACO,QAAQ,IAAI1B,kBAAkB,CAAC;EAExCyB,UAAU,CAAC,MAAM;IACftB,QAAQ,CAAC;MAAEO,IAAI,EAAE,cAAc;MAAEG,OAAO,EAAEG;IAAG,CAAC,CAAC;EACjD,CAAC,EAAE,CAACG,KAAK,CAACO,QAAQ,IAAI1B,kBAAkB,IAAI,GAAG,CAAC,CAAC,CAAC;;EAElD,OAAO;IACLgB,EAAE,EAAEA,EAAE;IACNO,OAAO;IACPI,MAAM,EAAGR,KAAK,IAAKS,OAAO,CAACC,IAAI,CAAC,oDAAoD,CAAC,CAAE;EACzF,CAAC;AACH;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACtB,KAAK,EAAEuB,QAAQ,CAAC,GAAGlC,KAAK,CAACmC,QAAQ,CAAChC,WAAW,CAAC;EAErDH,KAAK,CAACoC,SAAS,CAAC,MAAM;IACpB5B,SAAS,CAAC6B,IAAI,CAACH,QAAQ,CAAC;IACxB,OAAO,MAAM;MACX,MAAMI,KAAK,GAAG9B,SAAS,CAAC+B,OAAO,CAACL,QAAQ,CAAC;MACzC,IAAII,KAAK,GAAG,CAAC,CAAC,EAAE;QACd9B,SAAS,CAACgC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAAC3B,KAAK,CAAC,CAAC;EAEX,OAAO;IACL,GAAGA,KAAK;IACRE,KAAK;IACLY,OAAO,EAAGV,OAAO,IAAKV,QAAQ,CAAC;MAAEO,IAAI,EAAE,eAAe;MAAEG;IAAQ,CAAC;EACnE,CAAC;AACH;AAACkB,EAAA,CAlBQD,QAAQ;AAoBjB,SAASA,QAAQ,EAAEnB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}