{"ast":null,"code":"import _objectSpread from\"/home/poodle/Work/TimeBoxing/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Inspired by https://ui.shadcn.com/docs/components/toast\nimport*as React from\"react\";const TOAST_LIMIT=1;let count=0;function genId(){count=(count+1)%Number.MAX_VALUE;return count.toString();}const reducer=(state,action)=>{switch(action.type){case\"ADD_TOAST\":return _objectSpread(_objectSpread({},state),{},{toasts:[action.toast,...state.toasts].slice(0,TOAST_LIMIT)});case\"UPDATE_TOAST\":return _objectSpread(_objectSpread({},state),{},{toasts:state.toasts.map(t=>t.id===action.toast.id?_objectSpread(_objectSpread({},t),action.toast):t)});case\"DISMISS_TOAST\":{const{toastId}=action;return _objectSpread(_objectSpread({},state),{},{toasts:state.toasts.filter(t=>t.id!==toastId)});}case\"REMOVE_TOAST\":return _objectSpread(_objectSpread({},state),{},{toasts:state.toasts.filter(t=>t.id!==action.toastId)});default:return state;}};const listeners=[];let memoryState={toasts:[]};function dispatch(action){memoryState=reducer(memoryState,action);listeners.forEach(listener=>{listener(memoryState);});}function toast(props){const id=genId();const update=props=>dispatch({type:\"UPDATE_TOAST\",toast:_objectSpread(_objectSpread({},props),{},{id})});const dismiss=()=>dispatch({type:\"DISMISS_TOAST\",toastId:id});dispatch({type:\"ADD_TOAST\",toast:_objectSpread(_objectSpread({},props),{},{id,open:true,onOpenChange:open=>{if(!open)dismiss();}})});return{id:id,dismiss,update};}function useToast(){const[state,setState]=React.useState(memoryState);React.useEffect(()=>{listeners.push(setState);return()=>{const index=listeners.indexOf(setState);if(index>-1){listeners.splice(index,1);}};},[state]);return _objectSpread(_objectSpread({},state),{},{toast,dismiss:toastId=>dispatch({type:\"DISMISS_TOAST\",toastId})});}export{useToast,toast};","map":{"version":3,"names":["React","TOAST_LIMIT","count","genId","Number","MAX_VALUE","toString","reducer","state","action","type","_objectSpread","toasts","toast","slice","map","t","id","toastId","filter","listeners","memoryState","dispatch","forEach","listener","props","update","dismiss","open","onOpenChange","useToast","setState","useState","useEffect","push","index","indexOf","splice"],"sources":["/home/poodle/Work/TimeBoxing/src/hooks/use-toast.js"],"sourcesContent":["// Inspired by https://ui.shadcn.com/docs/components/toast\nimport * as React from \"react\"\n\nconst TOAST_LIMIT = 1\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE\n  return count.toString()\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== toastId),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n    default:\n      return state\n  }\n}\n\nconst listeners = []\n\nlet memoryState = { toasts: [] }\n\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\nfunction toast(props) {\n  const id = genId()\n\n  const update = (props) =>\n    dispatch({ type: \"UPDATE_TOAST\", toast: { ...props, id } })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast } "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}